[% PROCESS includes/menu_begin.tti %]
[%- USE Javascript -%]
<form id="console_form" method="POST" enctype="multipart/form-data">
<p id="update_error" style="font-weight: bold;"></p>
<script type="text/javascript">
function send_message(href)
{
    window.open(href, '', 'width=500,height=400,location=no,menubar=no,resizable=yes,scrollbars=no,status=no,toolbar=no');
}
function get_element(name)
{
  if (document.all)
      return document.all(name);
  else
      return document.getElementById(name);
}
function add_id(id)
{
    var e = get_element('selection');
    if (e.value != '') e.value += ',';
    e.value += id;
}
function clear_selection()
{
    var e = get_element('selection');
    e.value = '';
}
function fill_diff()
{
    var a = get_element('a_diff');
    var e = get_element('selection');
    var re = /^(\d+),(\d+)$/;
    var rs = re.exec(e.value);
    if (rs == null || rs.length != 3 || 0 >= rs[1] || 0 >= rs[2])
    {
        alert('[% capt.two_reqs %]');
        return false;
    }
    a.href = '[% href_diff %];r1=' + rs[1] + ';r2=' + rs[2];
    e.value = '';
    return true;
}
function fill_1(aid, arg)
{
    var a = get_element(aid);
    var e = get_element('selection');
    if (!e.value.match([% IF is_jury %]/^[0-9,]+$/[% ELSE %]/^\d+$/[% END %]))
    {
        alert('[% capt.no_req %]');
        return false;
    }
    a.href = arg + e.value;
    e.value = '';
    return true;
}
</script>
[% WRAPPER includes/listview_header.tti %]
[% capt.filter %]:
[% IF user_filter %]<a href="[% href_all_events %]">[% capt.filter_all %]</a>
[% ELSE %]<a href="[% href_my_events_only %]">[% capt.filter_my %]</a>[% END %]
<span class="nobr">
<label title="[% capt.contests %]">[% checkbox('show_contests', show_contests) %] [% capt.contests_short %]</label>
<label title="[% capt.messages %]">[% checkbox('show_messages', show_messages) %] [% capt.messages_short %]</label>
<label title="[% capt.results %]">[% checkbox('show_results', show_results) %] [% capt.results_short %]</label>
</span>
<span class="nobr">[% capt.for %] [% select('i_value', i_values) %] [% select('i_unit', i_units) %]</spen>
[% END %]
<span id="refreshable_content">
[% UNLESS initial_content %]<br/>[% capt.loading %]<br/>
[% ELSE; initial_content; END %]
</span>
[% IF is_team %]
<br/>
[% IF is_jury %]
<div>
    [% capt.selection %]:
    <input type="text" id="selection" name="selection" size="35" value="[% selection %]" class="bordered" />
    [ <a href="#" onclick="clear_selection(); return false;">[% capt.clear %]</a>
    | <a id="a_source" href="[% href_view_source %]" target="_blank"
      onclick="return fill_1('a_source', '[% href_view_source %];rid=');">[% capt.source %]</a>
    | <a id="a_run_details" href="[% href_run_details %]" target="_blank"
      onclick="return fill_1('a_run_details', '[% href_run_details %];rid=');">[% capt.results %]</a>
    | <a id="a_run_log" href="[% href_run_log %]" target="_blank"
      onclick="return fill_1('a_run_log', '[% href_run_log %];rid=');">[% capt.log %]</a>
    | <a id="a_diff" href="[% href_diff %]" target="_blank"
      onclick="return fill_diff();">[% capt.compare %]</a>
    ] <button id="retest" name="retest" value="1" type="submit" class="button">[% capt.retest %]</button>
</div>
[% END %]
</form>
<form method="POST" enctype="multipart/form-data">
<div class="send_message">
    [% capt.question %]:
    <input size="100" maxlength="200" name="question_text" class="bordered" />
    <input type="submit" value="[% capt.send %]" name="send_question" class="button"/>
</div>
[% END %]
</form>
<script type="text/javascript">
autoupdate_interval = [% autoupdate %];
console_url = '[% href_console_content %]';
main_form = get_element('console_form');

function error_message(error_code) {
    get_element('update_error').innerHTML = '[% ajax_error_msg | $Javascript %]' + error_code;
}

function xhr_request(url, method, data, callback, error_callback) {
    var xhr = new XMLHttpRequest();
    if (!xhr && method == 'GET') {
        error_callback(-1);
        main_form.style.opacity = '1';
        return false;
    }
    //main_form.style.opacity = '0.3';
    xhr.onreadystatechange = function(){
        if (xhr.readyState === XMLHttpRequest.DONE) {
            if (xhr.status == 200) {
                callback(xhr.response);
            } else {
                main_form.style.opacity = '1';
                if (error_callback) {
                    error_callback(xhr.status)
                } else {
                    error_message(xhr.status);
                }
            }
        }
    };
    xhr.open(method, url);
    xhr.send(data);
}

function update_content(response) {
    var refreshable = get_element('refreshable_content');
    refreshable.innerHTML = response;
    var pages_top = get_element('pages_top');
    var pages_bottom = get_element('pages_bottom');
    pages_top.innerHTML = pages_bottom.innerHTML;
    main_form.style.opacity = '1';
    refresh();
}

function form_submit_handler(e) {
    var fd = new FormData(e.target);
    xhr_request(console_url, 'POST', fd, update_content);
    e.preventDefault();
}

function retest() {
    var fd = new FormData(main_form);
    fd.set('retest', 1);
    get_element('selection').value = '';
    xhr_request(console_url, 'POST', fd, update_content);
}

var msie = document.documentMode;

if (autoupdate_interval && (!msie || msie >= 9)) {
    main_form.addEventListener('submit', form_submit_handler);
    get_element('retest').addEventListener('click', function(e) {
        retest();
        e.preventDefault();
    });
}

function console_update() {
    xhr_request(console_url, 'GET', undefined, update_content);
}

var refresh_timeout;
function refresh() {
    clearTimeout(refresh_timeout);
    refresh_timeout = setTimeout(console_update, 1000 * autoupdate_interval);
}

if (autoupdate_interval != 0 ) {
    refresh();
}

</script>
[% PROCESS includes/menu_end.tti %]
